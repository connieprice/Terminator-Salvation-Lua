require("managers/actionmanagers/AMSpiderStart")
require("managers/actionmanagers/AMTeleport")
require("managers/actionmanagers/AMCustomAnimation")
require("managers/actionmanagers/AMFlyerStart")
require("managers/actionmanagers/AMCheckPoint")
require("managers/actionmanagers/AMEndOfMission")
require("managers/actionmanagers/AMMissionObjective")
require("managers/actionmanagers/AMPlayer")
require("managers/actionmanagers/AMM1Pickup")
require("managers/actionmanagers/AMM4Pickup")
require("managers/actionmanagers/AMRailDriveTest")
require("managers/actionmanagers/AMMagneticChargePickup")
require("managers/actionmanagers/AMM79Pickup")
require("managers/actionmanagers/AMAchievement")
require("managers/actionmanagers/AMAiOrder")
require("managers/actionmanagers/AMMetalWalkerStart")
require("managers/actionmanagers/AMNpcStart")
require("managers/actionmanagers/AMPlayerTankStart")
require("managers/actionmanagers/AMConnorTankStart")
require("managers/actionmanagers/AMBlairTankStart")
require("managers/actionmanagers/AMBarnesStart")
require("managers/actionmanagers/AMBlairStart")
require("managers/actionmanagers/AMJohnConnorStart")
require("managers/actionmanagers/AMAvaStart")
require("managers/actionmanagers/AMMurphyStart")
require("managers/actionmanagers/AMRogersStart")
require("managers/actionmanagers/AMRogersSet2Start")
require("managers/actionmanagers/AMSoldier01Start")
require("managers/actionmanagers/AMSoldier02Start")
require("managers/actionmanagers/AMSoldier03Start")
require("managers/actionmanagers/AMSoldier04Start")
require("managers/actionmanagers/AMSoldier05Start")
require("managers/actionmanagers/AMSoldier06Start")
require("managers/actionmanagers/AMSoldier07Start")
require("managers/actionmanagers/AMResistanceFemale01Start")
require("managers/actionmanagers/AMResistanceFemale02Start")
require("managers/actionmanagers/AMResistanceFemale03Start")
require("managers/actionmanagers/AMSurvivalistFemale01Start")
require("managers/actionmanagers/AMSurvivalistFemale02Start")
require("managers/actionmanagers/AMSurvivalistFemale03Start")
require("managers/actionmanagers/AMSurvivalistFemale04Start")
require("managers/actionmanagers/AMSurvivalistMale01Start")
require("managers/actionmanagers/AMSurvivalistMale02Start")
require("managers/actionmanagers/AMSurvivalistMale03Start")
require("managers/actionmanagers/AMSurvivalistMale04Start")
require("managers/actionmanagers/AMSurvivalistMale05Start")
require("managers/actionmanagers/AMSurvivalistMale06Start")
require("managers/actionmanagers/AMSurvivalistMale07Start")
require("managers/actionmanagers/AMSurvivalistMale08Start")
require("managers/actionmanagers/AMSurvivalistMale09Start")
require("managers/actionmanagers/AMSurvivalistMale10Start")
require("managers/actionmanagers/AMSurvivalistMale11Start")
require("managers/actionmanagers/AMSurvivalistMale12Start")
require("managers/actionmanagers/AMCommanderStart")
require("managers/actionmanagers/AMWarrenStart")
require("managers/actionmanagers/AMKlempStart")
require("managers/actionmanagers/AMWellsStart")
require("managers/actionmanagers/AMAllenStart")
require("managers/actionmanagers/AMCarsonStart")
require("managers/actionmanagers/AMPetersStart")
require("managers/actionmanagers/AMLewisStart")
require("managers/actionmanagers/AMHopkinsStart")
require("managers/actionmanagers/AMDeckardStart")
require("managers/actionmanagers/AMDobkinStart")
require("managers/actionmanagers/AMSyncedSound")
require("managers/actionmanagers/AMShowWeakspots")
require("managers/actionmanagers/AMAngieSalterStart")
require("managers/actionmanagers/AMConnieStart")
require("managers/actionmanagers/AMGiffinStart")
require("managers/actionmanagers/AMJonasStart")
require("managers/actionmanagers/AMMarksStart")
require("managers/actionmanagers/AMMarksSet2Start")
require("managers/actionmanagers/AMMiddleAgedManStart")
require("managers/actionmanagers/AMOgradyStart")
require("managers/actionmanagers/AMOldWomanStart")
require("managers/actionmanagers/AMSandersStart")
require("managers/actionmanagers/AMSimpsonStart")
require("managers/actionmanagers/AMStevensStart")
require("managers/actionmanagers/AMTinaStart")
require("managers/actionmanagers/AMXiaoLinStart")
require("managers/actionmanagers/AMDavidWestonStart")
require("managers/actionmanagers/AMRailVehicle")
require("managers/actionmanagers/AMRailTransition")
require("managers/actionmanagers/AMControlRailFlyer")
require("managers/actionmanagers/AMDebug")
require("managers/actionmanagers/AMFlyerTrackStart")
require("managers/actionmanagers/AMRailFlyerStart")
require("managers/actionmanagers/AMRailCameraMode")
require("managers/actionmanagers/AMRailVehicleEditSeat")
require("managers/actionmanagers/AMWorldCamera")
require("managers/actionmanagers/AMTimescale")
require("managers/actionmanagers/AMUnitStatus")
require("managers/actionmanagers/AMVoice")
require("managers/actionmanagers/AMScene")
require("managers/actionmanagers/AMVolumeSet")
require("managers/actionmanagers/AMPlayerControl")
require("managers/actionmanagers/AMChangeEnvironment")
require("managers/actionmanagers/AMMoodControl")
require("managers/actionmanagers/AMTutorial")
require("managers/actionmanagers/AMMovie")
require("managers/actionmanagers/AMPlayerTankCheckPoint")
require("managers/actionmanagers/AMLifeControl")
require("managers/actionmanagers/AMAiWaypointTrigger")
require("managers/actionmanagers/AMAiCombatTarget")
require("managers/actionmanagers/AMDebugText")
require("managers/actionmanagers/AMSceneTrigger")
require("managers/actionmanagers/AMMissionFailed")
require("managers/actionmanagers/AMFlyerSearchLightControl")
require("managers/actionmanagers/AMLookAt")
require("managers/actionmanagers/AMNPCLookAt")
require("managers/actionmanagers/AMDynamicDialog")
require("managers/actionmanagers/AMMenuTrigger")
require("managers/actionmanagers/AMBattleArea")
require("managers/actionmanagers/AMWestonStart")
require("managers/actionmanagers/AMCrazyResistanceStart")
require("managers/actionmanagers/AMResistancePilot01Start")
require("managers/actionmanagers/AMResistancePilot02Start")
require("managers/actionmanagers/AMSurvivor01Start")
require("managers/actionmanagers/AMSurvivor02Start")
require("managers/actionmanagers/AMResistanceMale08Start")
require("managers/actionmanagers/AMResistanceMale09Start")
require("managers/actionmanagers/AMResistanceMale10Start")
require("managers/actionmanagers/AMResistanceMale11Start")
require("managers/actionmanagers/AMResistanceMale12Start")
require("managers/actionmanagers/AMResistanceMale13Start")
require("managers/actionmanagers/AMResistanceFemale04Start")
require("managers/actionmanagers/AMResistanceFemale05Start")
require("managers/actionmanagers/AMResistanceFemale06Start")
require("managers/actionmanagers/AMResistanceFemale07Start")
require("managers/actionmanagers/AMResistanceFemale08Start")
require("managers/actionmanagers/AMResistanceFemale09Start")
require("managers/actionmanagers/AMResistanceMale01Set2Start")
require("managers/actionmanagers/AMResistanceMale02Set2Start")
require("managers/actionmanagers/AMResistanceFighter01Start")
require("managers/actionmanagers/AMResistanceFighter02Start")
require("managers/actionmanagers/AMResistanceFighter06Start")
require("managers/actionmanagers/AMResistanceFighter07Start")
require("managers/actionmanagers/AMResistanceSoldier06Start")
require("managers/actionmanagers/AMResistanceSoldier07Start")
require("managers/actionmanagers/AMResistanceSoldier08Start")
require("managers/actionmanagers/AMResistanceSoldier10Start")
require("managers/actionmanagers/AMResistanceSoldier13Start")
require("managers/actionmanagers/AMResistanceSoldier15Start")
require("managers/actionmanagers/AMPlayerWalk")
require("managers/actionmanagers/AMSkynetDefenceTurret")
require("managers/actionmanagers/AMHarvesterBoss")
require("managers/actionmanagers/AMHarvesterBossSound")
require("managers/actionmanagers/AMAmmoBox")
require("managers/actionmanagers/AMRumble")
if not AMSpawnUnit then
	AMSpawnUnit = class(CoreActionElement)
end
AMSpawnUnit.init = function(l_1_0, l_1_1, l_1_2)
	CoreActionElement.init(l_1_0, l_1_1, l_1_2)
	if l_1_0.unit_name ~= "none" then
		World:preload_unit(l_1_0.unit_name)
	end
end

AMSpawnUnit.activate_now = function(l_2_0)
	cat_print("gaspode", "AMSpawnUnit:activate_now()", l_2_0.unit_name)
	if l_2_0.unit_name ~= "none" then
		local l_2_1 = World:spawn_unit(l_2_0.unit_name, l_2_0.position, l_2_0.rotation)
		if l_2_0.unit_spawn_mass then
			l_2_1:push(l_2_0.unit_spawn_mass, l_2_0.unit_spawn_dir * l_2_0.unit_spawn_velocity)
		end
	else
		if Application:editor() then
			managers.editor:output_error("Cant spawn unit \"none\" [" .. l_2_0._name .. "]")
		end
	end
	l_2_0:deactivate_now()
end

if not AMCameraShake then
	AMCameraShake = class(CoreActionElement)
end
AMCameraShake.init = function(l_3_0, l_3_1, l_3_2)
	CoreActionElement.init(l_3_0, l_3_1, l_3_2)
end

AMCameraShake.activate_now = function(l_4_0)
	if alive(script_data.player) then
		cat_print("gaspode", "AMCameraShake:activate_now()")
		if l_4_0.shaker_strength then
			local l_4_1 = script_data.player:camera():shaker_play("mission_triggered", l_4_0.shaker_strength)
			script_data.player:camera():shaker():set_parameter(l_4_1, "attack", l_4_0.shaker_attack)
			script_data.player:camera():shaker():set_parameter(l_4_1, "sustain", l_4_0.shaker_sustain)
			script_data.player:camera():shaker():set_parameter(l_4_1, "decay", l_4_0.shaker_decay)
		end
	else
		script_data.player:camera():shaker_play("mission_triggered", 0.5)
	end
	l_4_0:deactivate_now()
end


